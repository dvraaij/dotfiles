# Sway config file. See sway(5).

set $mod Mod4

focus_follows_mouse no
floating_modifier $mod

font pango:Iosevka 10

set $swayexit 'swaynag -t warning -m "Exit sway?" -B "Yes" "swaymsg exit"'
set $swaylock 'swaylock --daemonize --image ~/.config/sway/wallpaper'
set $swaydpmsoff 'swaymsg "output * dpms off"'
set $swaydpmson  'swaymsg "output * dpms on"'

exec swayidle -w \
  idlehint 300              \
   timeout 300 $swaylock    \
   timeout 300 $swaydpmsoff resume $swaydpmson \
  before-sleep $swaylock    \
          lock $swaylock    \
  after-resume $swaydpmson  \
        unlock $swaydpmson

set $laptop eDP-1

output * background ~/.config/sway/wallpaper center

# Clamshell support, check the state of the laptop lid.
exec_always ~/.config/sway/check_laptop_lid $laptop

# NetworkManager is the most popular way to manage wireless networks on
# Linux, and nm-applet is a desktop environment-independent system tray
# GUI for it.
exec nm-applet

# Key bindings to reload the configuration file, restart sway inplace,
# lock and exit sway.
bindsym $mod+shift+c reload
bindsym $mod+shift+r restart
bindsym $mod+shift+x exec $swaylock
bindsym $mod+shift+e exec $swayexit

# Use urxvt(1) using XWayland, load .Xresources when sway starts.
#exec_always xrdb -load ~/.Xresources
#bindsym $mod+return exec urxvt

# Use alacritty as default shell.
bindsym $mod+return exec alacritty

# Use bemenu(1) as program launcher. The bemenu-run command is wrapped to
# ease the theming.
set $menu "~/.config/sway/bemenu-run_wrapper | xargs swaymsg exec"
bindsym $mod+d exec $menu

# Key bindings for changing the focus.
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# Alternatively, you can use the cursor keys.
bindsym $mod+left  focus left
bindsym $mod+down  focus down
bindsym $mod+up    focus up
bindsym $mod+right focus right

# Key binding to kill a focused window.
bindsym $mod+shift+q kill

# Key bindings to move a focused window.
bindsym $mod+shift+j move left
bindsym $mod+shift+k move down
bindsym $mod+shift+l move up
bindsym $mod+shift+semicolon move right

# Alternatively, you can use the cursor keys.
bindsym $mod+shift+Left  move left
bindsym $mod+shift+Down  move down
bindsym $mod+shift+Up    move up
bindsym $mod+shift+Right move right

# Key binding to split in horizontal or vertical orientation.
bindsym $mod+h split h
bindsym $mod+v split v

# Key binding to enter fullscreen mode for the focused container.
bindsym $mod+f fullscreen toggle

# Key bindings to change container layout (stacked, tabbed, toggle split).
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Key binding to toggle tiling / floating.
bindsym $mod+shift+space floating toggle

# Key binding to change focus between tiling / floating windows.
bindsym $mod+space focus mode_toggle

# Key binding to focus the parent or child container.
bindsym $mod+a focus parent
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# Key bindings to switch workspaces.
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# Key bindings to move a focused container to some workspace.
bindsym $mod+shift+1 move container to workspace number $ws1
bindsym $mod+shift+2 move container to workspace number $ws2
bindsym $mod+shift+3 move container to workspace number $ws3
bindsym $mod+shift+4 move container to workspace number $ws4
bindsym $mod+shift+5 move container to workspace number $ws5
bindsym $mod+shift+6 move container to workspace number $ws6
bindsym $mod+shift+7 move container to workspace number $ws7
bindsym $mod+shift+8 move container to workspace number $ws8
bindsym $mod+shift+9 move container to workspace number $ws9
bindsym $mod+shift+0 move container to workspace number $ws10

# Key bindings to resize a  window (you can also use the mouse for that).
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left  will shrink the window’s width.
        # Pressing right will grow   the window’s width.
        # Pressing up    will shrink the window’s height.
        # Pressing down  will grow   the window’s height.
        bindsym j         resize shrink width  10 px or 10 ppt
        bindsym k         resize grow   height 10 px or 10 ppt
        bindsym l         resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow   width  10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym left  resize shrink width  10 px or 10 ppt
        bindsym down  resize grow   height 10 px or 10 ppt
        bindsym up    resize shrink height 10 px or 10 ppt
        bindsym right resize grow   width  10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym return mode "default"
        bindsym escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status 'killall -SIGUSR1 i3status'
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@   +10%   && $refresh_i3status
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@   -10%   && $refresh_i3status
bindsym XF86AudioMute        exec pactl set-sink-mute   @DEFAULT_SINK@   toggle && $refresh_i3status
bindsym XF86AudioMicMute     exec pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use brightnessctl to adjust the brightness of the screen.
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp   exec brightnessctl set 5%+

# Definition of various colors, based on arc darker theme.
#
#   see also
#     . https://www.youtube.com/watch?v=ARKIwOlazKI
#     . https://github.com/arc-design/arc-theme
#
set $bg-color            #2F343F
set $inactive-bg-color   #2F343F
set $text-color          #F3F4F5
set $inactive-text-color #676E7D
set $urgent-bg-color     #E53935
set $indicator-color     #00FF00

#                       border             background         text                 indicator
client.focused          $bg-color          $bg-color          $text-color          $indicator-color
client.unfocused        $inactive-bg-color $inactive-bg-color $inactive-text-color $indicator-color
client.focused_inactive $inactive-bg-color $inactive-bg-color $inactive-text-color $indicator-color
client.urgent           $urgent-bg-color   $urgent-bg-color   $text-color          $indicator-color

# Start sway-bar(1) to display a workspace bar, use i3status(1) to query system stats.
bar {
        status_command i3status
        colors {
               background $bg-color
               separator #757575
               #                  border             background         text
               focused_workspace  $bg-color          $bg-color          $text-color
               inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
               urgent_workspace   $urgent-bg-color   $urgent-bg-color   $text-color
        }
}
